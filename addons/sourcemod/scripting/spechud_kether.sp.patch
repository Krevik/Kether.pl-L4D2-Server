--- /home/starterx4/Pulpit/gity/Kether.pl-L4D2-Server/addons/sourcemod/scripting/spechud_kether.sp	2023-06-03 18:18:47.587608370 +0200
+++ /home/starterx4/Pulpit/gity/Kether.pl-L4D2-Server/addons/sourcemod/scripting/spechud.sp	2023-06-02 19:15:11.380827545 +0200
@@ -19,15 +19,12 @@
 #include <lerpmonitor>
 #include <witch_and_tankifier>
 
-//Kether patches
-#include "kether/spechud.inc"
-
 #define PLUGIN_VERSION	"3.6.0"
 
 public Plugin myinfo = 
 {
 	name = "Hyper-V HUD Manager",
-	author = "Visor, Forgetest, Krevik, StarterX4",
+	author = "Visor, Forgetest",
 	description = "Provides different HUDs for spectators",
 	version = PLUGIN_VERSION,
 	url = "https://github.com/Target5150/MoYu_Server_Stupid_Plugins"
@@ -94,13 +91,6 @@
 // ======================================================================
 public void OnPluginStart()
 {
-	punch_count_store = CreateTrie();
-	rock_count_store = CreateTrie();
-	prop_count_store = CreateTrie();
-	damage_value_store = CreateTrie();
-	whoHadTankNicknames = CreateArray(128);
-	whoHadTankSteamIDs = CreateArray(64);
-
 	(	survivor_limit			= FindConVar("survivor_limit")			).AddChangeHook(GameConVarChanged);
 	(	z_max_player_zombies	= FindConVar("z_max_player_zombies")	).AddChangeHook(GameConVarChanged);
 	(	versus_boss_buffer		= FindConVar("versus_boss_buffer")		).AddChangeHook(GameConVarChanged);
@@ -124,11 +114,7 @@
 	HookEvent("player_death",		Event_PlayerDeath,		EventHookMode_Post);
 	HookEvent("witch_killed",		Event_WitchDeath,		EventHookMode_PostNoCopy);
 	HookEvent("player_team",		Event_PlayerTeam,		EventHookMode_Post);
-	HookEvent("tank_spawn", 		Event_TankSpawn);							//to calculate tank spawn time
-	HookEvent("player_hurt", 		Event_PlayerHurt, 		EventHookMode_Pre); //to get punch, rock, prop, totaldamage
-	HookEvent("player_incapacitated", 		Event_PlayerIncapacitated, 		EventHookMode_Post); 
-	HookEvent("player_incapacitated_start", 		Event_PlayerIncapacitatedBefore, 		EventHookMode_Pre); 
-
+	
 	for (int i = 1; i <= MaxClients; ++i)
 	{
 		bSpecHudActive[i] = false;
@@ -141,9 +127,7 @@
 	hTankHudViewers = new ArrayList();
 	
 	bPendingArrayRefresh = true;
-	g_bIsTankInPlay = false;
-	ClearTankDamage();
-	g_bAnnounceTankDamage = false;
+	
 	CreateTimer(SPECHUD_DRAW_INTERVAL, HudDrawTimer, _, TIMER_REPEAT);
 }
 
@@ -408,13 +392,11 @@
 {
 	bRoundLive = false;
 	bPendingArrayRefresh = true;
-	ClearTankDamage();
 }
 
 public void Event_RoundEnd(Event event, const char[] name, bool dontBroadcast)
 {
 	bRoundLive = false;
-	PrintTankDamage();
 }
 
 public void Event_PlayerDeath(Event event, const char[] name, bool dontBroadcast)
@@ -635,13 +617,7 @@
 		for (int i = 0; i < arraysize; ++i)
 		{
 			int client = hTankHudViewers.Get(i);
-			if(!IsTank(client)){
-				SendPanelToClient(tankHud, client, DummyTankHudHandler, 3);
-			}else{
-				if(!IsFakeClient(client)){
-						PrintHintText(client, "Control : %d / 2 | Frustration: %d", L4D2Direct_GetTankPassedCount(), GetTankFrustration(client));
-				}
-			}
+			SendPanelToClient(tankHud, client, DummyTankHudHandler, 3);
 			if (!bTankHudHintShown[client])
 			{
 				bTankHudHintShown[client] = true;
@@ -1093,38 +1069,10 @@
 	{
 		FormatEx(info, sizeof(info), "%s :: Tank HUD", sReadyCfgName);
 		DrawPanelText(hSpecHud, info);
-
-		char steamUsername[64] = "UNDEFINED";
-		bool found = GetClientAuthId(tank, AuthId_Steam2, steamUsername, sizeof(steamUsername));     
-		if(!found){
-			steamUsername = "AI";
-		}
-		//let's load tries
-		char punch_Count_Key[120];
-		char rock_Count_Key[120];
-		char prop_Count_Key[120];
-		char total_Damage_Value_Key[120];
-		Format(punch_Count_Key, sizeof(punch_Count_Key), "%s_punch", steamUsername);
-		Format(rock_Count_Key, sizeof(rock_Count_Key), "%s_rock", steamUsername);
-		Format(prop_Count_Key, sizeof(prop_Count_Key), "%s_prop", steamUsername);
-		Format(total_Damage_Value_Key, sizeof(total_Damage_Value_Key), "%s_total_dmg", steamUsername);
-
-		int punchCount;
-		GetTrieValue(punch_count_store, punch_Count_Key, punchCount);
-		int rockCount;
-		GetTrieValue(rock_count_store, rock_Count_Key, rockCount);
-		int propCount;
-		GetTrieValue(prop_count_store, prop_Count_Key, propCount);
-		int totalDamage;
-		GetTrieValue(damage_value_store, total_Damage_Value_Key, totalDamage);
 		
 		int len = strlen(info);
 		for (int i = 0; i < len; ++i) info[i] = '_';
 		DrawPanelText(hSpecHud, info);
-		Format(info, sizeof(info), "Punches: %i | Rocks: %i | Objects: %i", punchCount, rockCount, propCount);
-		DrawPanelText(hSpecHud, info);
-		Format(info, sizeof(info), "Total Damage: %i", totalDamage);
-		DrawPanelText(hSpecHud, info);
 	}
 	else
 	{
@@ -1180,11 +1128,6 @@
 	}
 	DrawPanelText(hSpecHud, info);
 
-    //Draw Spawn Time
-	UpdateTankUpTime();
-	Format(info, sizeof(info), "Spawn: (%s)", Tank_UpTime);
-	DrawPanelText(hSpecHud, info);
-
 	// Draw network
 	if (!IsFakeClient(tank))
 	{
